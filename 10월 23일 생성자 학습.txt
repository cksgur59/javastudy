메서드 오버로딩 (method overloading)
- 메서드의 이름이 같아도 에러 없이 제기능이 가능한 메서드의 특징

1. 선결 조건 (and)
    - 같은 클래스에서 생성된 메서드 들
    - 메서드의 이름이 같아야 함.

2. 메서드 오버로딩 성립 조건(or)
    - 1. 파라미터(=매개변수)의 개수가 다르면 메서드 오버로딩 성립
    - 2. 파라미터의 개수가 같은데, 자료형이 다르면 메서드 오버로딩 성립
    - 3. 2번 상황에서 파라미터의 자료형의 배치 순서가 다르면 메서드 오버로딩 성립

3. 메서드 오버로딩을 사용해야 하는 때
    - 1. 메서드들의 전반적인 기능이 같은데 파라미터의 자료형이 다른 때

4. 메서드 오버로딩과 관련 없는 것들
    - 1. 접근제한자 
    - 2. 반환형
    - 3. 파라미터의 변수명
    - 4. 메서드의 본문 내용

5. 메서드 오버로딩의 장점은 메서드 호출 때 나온다

6. 메서드 오버로딩과 메서드 오버라이딩의 차이
    - 오버라이딩 : 상속 관계가 성립하는 두 클래스 에서 자식클래스가 부모클래스의 메서드 내용을 재정의(수정/삭제/추가)하는 것을 의미함.


생성자 : Class의 멤버변수를 초기화하는 클래스의 구성 요소.
	생성자는 반환형이 없다

생성자는 [디폴트 생성자]와 [사용자 생성자]로 나뉜다
	디폴트 생성자: 파리미터가 없는 생성자
	사용자 생성자: 파리미터가 있는 생성자

생성자의 기능
	1. 클래스의 멤버변수 초기화
	2. 참조자료형의 자료형에 맞는 값을 제공함

디폴트 생성자 : 파라미터가 없는 생성자
	디폴트 생성자는 
	  클래스에 생성자가 없으면, 눈에 보이자 않아도 존재함.
	  클래스에 생성자가 있으면, 디폴트 생성자가 눈에 안 보이면 안 존재함

디폴트 생성자와 사용자 생성자를 언제 구분해서  사용자 생성자를 아니 못구하는가









